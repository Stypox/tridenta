plugins {
    alias(libs.plugins.com.android.application)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    alias(libs.plugins.com.google.devtools.ksp)
    alias(libs.plugins.com.google.dagger.hilt.android)
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "org.stypox.tridenta"
        minSdk 21
        targetSdk 34
        versionCode 40
        versionName "1.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
            arg("room.incremental", "true")
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.toVersion(libs.versions.java.get())
        targetCompatibility JavaVersion.toVersion(libs.versions.java.get())
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = libs.versions.java.get()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.kotlinCompilerExtension.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'org.stypox.tridenta'
    applicationVariants.configureEach { variant ->
        kotlin.sourceSets {
            named(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

hilt {
    enableAggregatingTask = false
}

dependencies {
    coreLibraryDesugaring libs.desugar.jdk.libs

    // Core
    implementation libs.core.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.compose
    implementation libs.okhttp
    implementation libs.preference.ktx

    // Compose and Material3
    implementation libs.activity.compose
    implementation libs.compose.ui
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.material.icons.extended
    androidTestImplementation libs.compose.ui.test.junit4
    debugImplementation libs.compose.ui.tooling
    debugImplementation libs.compose.androidx.ui.test.manifest
    implementation libs.compose.androidx.runtime.livedata
    implementation libs.androidx.material3

    // Accompanist
    // accompanist SwipeRefresh is deprecated, but there is still no alternative
    // available in material3: https://issuetracker.google.com/issues/261760718
    implementation libs.accompanist.swiperefresh

    // Navigation
    implementation libs.compose.destinations.core
    ksp libs.compose.destinations.ksp

    // Room
    implementation libs.androidx.room.runtime
    annotationProcessor libs.androidx.room.compiler
    ksp libs.androidx.room.compiler
    testImplementation libs.androidx.room.testing

    // Hilt
    implementation libs.hilt.android
    implementation libs.androidx.hilt.navigation.compose
    ksp libs.hilt.compiler
    androidTestImplementation libs.hilt.android.testing
    androidTestAnnotationProcessor libs.hilt.compiler
    testImplementation libs.hilt.android.testing
    testAnnotationProcessor libs.hilt.compiler

    // Test
    testImplementation libs.junit
    testImplementation libs.json
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}
